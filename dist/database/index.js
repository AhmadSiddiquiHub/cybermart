"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserFavCategoryRepository = exports.CouponUserRepository = exports.CouponCategoryRepository = exports.CouponProductRepository = exports.CouponTypesRepository = exports.CouponRepository = exports.VendorCouponRepository = exports.ProductAttributeVendorValueRepository = exports.VariantsToCategoryRepository = exports.AttributesToCategoryRepository = exports.AttributeValueRepository = exports.AttributeRepository = exports.VendorProductStatusLogRepository = exports.ProductShippingInfoRepository = exports.VendorProductCategoryRepository = exports.SiteBankRepository = exports.VendorBankAccRepository = exports.BankRepository = exports.ProductMeasurementRepository = exports.ProductPreferenceRepository = exports.UserProductPreferenceRepository = exports.ProductDiscountRepository = exports.ProductVariantImageRepository = exports.VendorProductVariantRepository = exports.ProductVariantValueRepository = exports.ProductVariantRepository = exports.VendorProductRepository = exports.ProductMetaInfoRepository = exports.ProductRepository = exports.VendorRepository = exports.DocumentTypesRepository = exports.DocumentRepository = exports.CityRepository = exports.StateRepository = exports.CountryRepository = exports.SiteRepository = exports.SiteUserRepository = exports.UserAddressesRepository = exports.OtpSettingRepository = exports.OtpCodesRepository = exports.UserRepository = exports.CategoryBrandRepository = exports.SiteBrandRepository = exports.BrandMetaInfoRepository = exports.BrandRepository = exports.SiteCategoryRepository = exports.CategoryPathRepository = exports.CategoryMLRepository = exports.CategoryRepository = exports.DBSource = void 0;
exports.ProductWarrantyRepository = exports.WarrantyTypesRepository = exports.RelatedProductsRepository = exports.OpenBoxSubscriptionRepository = exports.OpenBoxProductPincodeRepository = exports.SameDayProductPincodeRepository = exports.OpenBoxGlobalPincodeRepository = exports.SameDayGlobalPincodeRepository = exports.TaxClassRepository = exports.VendorLogsRepository = exports.CampaignPackageRepository = exports.ReasonRepository = exports.ComboOfferRepository = exports.SmsVariableRepository = exports.SmsMlRepository = exports.SmsRepository = exports.EmailVariableRepository = exports.EmailMlRepository = exports.EmailRepository = exports.ProductRatingRepository = exports.CampaignRepository = exports.CampaignProductsRepository = exports.CampaignVendorsRepository = exports.ProductQuestionsRepository = exports.ProductAnswersRepository = exports.VendorStoreProfileRepository = exports.CountriesRepository = exports.CourierRepository = exports.WalletHistoryRepository = exports.SiteSettingRepository = exports.SubOrderLogRepository = exports.SubOrderTrackingRepository = exports.VendorOrderNoteRepository = exports.UserOrderPreferenceRepository = exports.OrderPreferenceRepository = exports.SubOrderRepository = exports.OrderInfoRepository = exports.OrderStatusRepository = exports.OrderRepository = void 0;
const typeorm_1 = require("typeorm");
const Users_1 = require("./models/Users");
const OtpCodes_1 = require("./models/OtpCodes");
const OtpSetting_1 = require("./models/OtpSetting");
const UserAddresses_1 = require("./models/UserAddresses");
const SiteUser_1 = require("./models/SiteUser");
const Site_1 = require("./models/Site");
const Country_1 = require("./models/Country");
const State_1 = require("./models/State");
const City_1 = require("./models/City");
const Category_1 = require("./models/Category");
const CategoryML_1 = require("./models/CategoryML");
const CategoryPath_1 = require("./models/CategoryPath");
const SiteCategory_1 = require("./models/SiteCategory");
const Brand_1 = require("./models/Brand");
const SiteBrand_1 = require("./models/SiteBrand");
const BrandMetaInfo_1 = require("./models/BrandMetaInfo");
const CategoryBrand_1 = require("./models/CategoryBrand");
const ProductPreference_1 = require("./models/ProductPreference");
const UserProductPreference_1 = require("./models/UserProductPreference");
const Product_1 = require("./models/Product");
const VendorProduct_1 = require("./models/VendorProduct");
const ProductVariant_1 = require("./models/ProductVariant");
const ProductVariantValue_1 = require("./models/ProductVariantValue");
const VendorProductVariant_1 = require("./models/VendorProductVariant");
const ProductVariantImage_1 = require("./models/ProductVariantImage");
const ProductDiscount_1 = require("./models/ProductDiscount");
const VendorProductCategory_1 = require("./models/VendorProductCategory");
const ProductShippingInfo_1 = require("./models/ProductShippingInfo");
const VendorProductStatusLog_1 = require("./models/VendorProductStatusLog");
const Attribute_1 = require("./models/Attribute");
const AttributesToCategory_1 = require("./models/AttributesToCategory");
const VariantsToCategory_1 = require("./models/VariantsToCategory");
const AttributeValue_1 = require("./models/AttributeValue");
const VendorCoupon_1 = require("./models/VendorCoupon");
const Coupon_1 = require("./models/Coupon");
const CouponProduct_1 = require("./models/CouponProduct");
const CouponUser_1 = require("./models/CouponUser");
const UserFavCategory_1 = require("./models/UserFavCategory");
const Order_1 = require("./models/Order");
const OrderInfo_1 = require("./models/OrderInfo");
const SubOrder_1 = require("./models/SubOrder");
const OrderStatus_1 = require("./models/OrderStatus");
const OrderPreference_1 = require("./models/OrderPreference");
const UserOrderPreference_1 = require("./models/UserOrderPreference");
const VendorOrderNote_1 = require("./models/VendorOrderNote");
const SubOrderTracking_1 = require("./models/SubOrderTracking");
const SubOrderLog_1 = require("./models/SubOrderLog");
const SiteSetting_1 = require("./models/SiteSetting");
const WalletHistory_1 = require("./models/WalletHistory");
const Courier_1 = require("./models/Courier");
const VendorStoreProfile_1 = require("./models/VendorStoreProfile");
const ProductAnswers_1 = require("./models/ProductAnswers");
const ProductQuestions_1 = require("./models/ProductQuestions");
const CampaignVendors_1 = require("./models/CampaignVendors");
const CampaignProducts_1 = require("./models/CampaignProducts");
const Campaign_1 = require("./models/Campaign");
const ProductRating_1 = require("./models/ProductRating");
const ProductAttributeVendorValue_1 = require("./models/ProductAttributeVendorValue");
const Email_1 = require("./models/Email");
const EmailMl_1 = require("./models/EmailMl");
const EmailVariable_1 = require("./models/EmailVariable");
const Sms_1 = require("./models/Sms");
const SmsMl_1 = require("./models/SmsMl");
const SmsVariable_1 = require("./models/SmsVariable");
const ComboOffer_1 = require("./models/ComboOffer");
const Reason_1 = require("./models/Reason");
const CouponType_1 = require("./models/CouponType");
const CouponCategory_1 = require("./models/CouponCategory");
const Bank_1 = require("./models/Bank");
const VendorBankAccount_1 = require("./models/VendorBankAccount");
const SiteBank_1 = require("./models/SiteBank");
const DocumentTypes_1 = require("./models/DocumentTypes");
const Document_1 = require("./models/Document");
const Sellers_1 = require("./models/Sellers");
const CampaignPackages_1 = require("./models/CampaignPackages");
const VendorLogs_1 = require("./models/VendorLogs");
const ProductMetaInfo_1 = require("./models/ProductMetaInfo");
const TaxClass_1 = require("./models/TaxClass");
const ProductMeasurement_1 = require("./models/ProductMeasurement");
const SameDayGlobalPincodes_1 = require("./models/SameDayGlobalPincodes");
const OpenBoxGlobalPincodes_1 = require("./models/OpenBoxGlobalPincodes");
const SameDayProductPincodes_1 = require("./models/SameDayProductPincodes");
const OpenBoxProductPincodes_1 = require("./models/OpenBoxProductPincodes");
const OpenBoxSubscription_1 = require("./models/OpenBoxSubscription");
const RelatedProducts_1 = require("./models/RelatedProducts");
const WarrantyTypes_1 = require("./models/WarrantyTypes");
const ProductWarranty_1 = require("./models/ProductWarranty");
const env_config_1 = require("../config/env.config");
const options = {
    type: 'mysql',
    host: env_config_1.envConfig.host,
    port: env_config_1.envConfig.port,
    username: env_config_1.envConfig.username,
    password: env_config_1.envConfig.password,
    database: env_config_1.envConfig.database,
    logging: ["query", "error"],
    logger: 'advanced-console',
    acquireTimeout: env_config_1.envConfig.acquireTimeout,
    connectTimeout: env_config_1.envConfig.connectTimeout,
    migrations: [],
    entities: [__dirname + '/models/*{.ts,.js}']
};
exports.DBSource = new typeorm_1.DataSource(options);
exports.CategoryRepository = exports.DBSource.getRepository(Category_1.Category);
exports.CategoryMLRepository = exports.DBSource.getRepository(CategoryML_1.CategoryML);
exports.CategoryPathRepository = exports.DBSource.getRepository(CategoryPath_1.CategoryPath);
exports.SiteCategoryRepository = exports.DBSource.getRepository(SiteCategory_1.SiteCategory);
exports.BrandRepository = exports.DBSource.getRepository(Brand_1.Brand);
exports.BrandMetaInfoRepository = exports.DBSource.getRepository(BrandMetaInfo_1.BrandMetaInfo);
exports.SiteBrandRepository = exports.DBSource.getRepository(SiteBrand_1.SiteBrand);
exports.CategoryBrandRepository = exports.DBSource.getRepository(CategoryBrand_1.CategoryBrand);
exports.UserRepository = exports.DBSource.getRepository(Users_1.Users);
exports.OtpCodesRepository = exports.DBSource.getRepository(OtpCodes_1.OtpCodes);
exports.OtpSettingRepository = exports.DBSource.getRepository(OtpSetting_1.OtpSetting);
exports.UserAddressesRepository = exports.DBSource.getRepository(UserAddresses_1.UserAddresses);
exports.SiteUserRepository = exports.DBSource.getRepository(SiteUser_1.SiteUser);
exports.SiteRepository = exports.DBSource.getRepository(Site_1.Site);
exports.CountryRepository = exports.DBSource.getRepository(Country_1.Country);
exports.StateRepository = exports.DBSource.getRepository(State_1.State);
exports.CityRepository = exports.DBSource.getRepository(City_1.City);
exports.DocumentRepository = exports.DBSource.getRepository(Document_1.Documents);
exports.DocumentTypesRepository = exports.DBSource.getRepository(DocumentTypes_1.DocumentTypes);
exports.VendorRepository = exports.DBSource.getRepository(Sellers_1.Seller);
exports.ProductRepository = exports.DBSource.getRepository(Product_1.Product);
exports.ProductMetaInfoRepository = exports.DBSource.getRepository(ProductMetaInfo_1.ProductMetaInfo);
exports.VendorProductRepository = exports.DBSource.getRepository(VendorProduct_1.VendorProduct);
exports.ProductVariantRepository = exports.DBSource.getRepository(ProductVariant_1.ProductVariant);
exports.ProductVariantValueRepository = exports.DBSource.getRepository(ProductVariantValue_1.ProductVariantValue);
exports.VendorProductVariantRepository = exports.DBSource.getRepository(VendorProductVariant_1.VendorProductVariant);
exports.ProductVariantImageRepository = exports.DBSource.getRepository(ProductVariantImage_1.ProductVariantImage);
exports.ProductDiscountRepository = exports.DBSource.getRepository(ProductDiscount_1.ProductDiscount);
exports.UserProductPreferenceRepository = exports.DBSource.getRepository(UserProductPreference_1.UserProductPreference);
exports.ProductPreferenceRepository = exports.DBSource.getRepository(ProductPreference_1.ProductPreference);
exports.ProductMeasurementRepository = exports.DBSource.getRepository(ProductMeasurement_1.ProductMeasurement);
exports.BankRepository = exports.DBSource.getRepository(Bank_1.Bank);
exports.VendorBankAccRepository = exports.DBSource.getRepository(VendorBankAccount_1.VendorBankAccount);
exports.SiteBankRepository = exports.DBSource.getRepository(SiteBank_1.SiteBank);
exports.VendorProductCategoryRepository = exports.DBSource.getRepository(VendorProductCategory_1.VendorProductCategory);
exports.ProductShippingInfoRepository = exports.DBSource.getRepository(ProductShippingInfo_1.ProductShippingInfo);
exports.VendorProductStatusLogRepository = exports.DBSource.getRepository(VendorProductStatusLog_1.VendorProductStatusLog);
exports.AttributeRepository = exports.DBSource.getRepository(Attribute_1.Attribute);
exports.AttributeValueRepository = exports.DBSource.getRepository(AttributeValue_1.AttributeValue);
exports.AttributesToCategoryRepository = exports.DBSource.getRepository(AttributesToCategory_1.AttributesToCategory);
exports.VariantsToCategoryRepository = exports.DBSource.getRepository(VariantsToCategory_1.VariantsToCategory);
exports.ProductAttributeVendorValueRepository = exports.DBSource.getRepository(ProductAttributeVendorValue_1.ProductAttributeVendorValue);
exports.VendorCouponRepository = exports.DBSource.getRepository(VendorCoupon_1.VendorCoupon);
exports.CouponRepository = exports.DBSource.getRepository(Coupon_1.Coupon);
exports.CouponTypesRepository = exports.DBSource.getRepository(CouponType_1.CouponType);
exports.CouponProductRepository = exports.DBSource.getRepository(CouponProduct_1.CouponProduct);
exports.CouponCategoryRepository = exports.DBSource.getRepository(CouponCategory_1.CouponCategory);
exports.CouponUserRepository = exports.DBSource.getRepository(CouponUser_1.CouponUser);
exports.UserFavCategoryRepository = exports.DBSource.getRepository(UserFavCategory_1.UserFavCategory);
exports.OrderRepository = exports.DBSource.getRepository(Order_1.Order);
exports.OrderStatusRepository = exports.DBSource.getRepository(OrderStatus_1.OrderStatus);
exports.OrderInfoRepository = exports.DBSource.getRepository(OrderInfo_1.OrderInfo);
exports.SubOrderRepository = exports.DBSource.getRepository(SubOrder_1.SubOrder);
exports.OrderPreferenceRepository = exports.DBSource.getRepository(OrderPreference_1.OrderPreference);
exports.UserOrderPreferenceRepository = exports.DBSource.getRepository(UserOrderPreference_1.UserOrderPreference);
exports.VendorOrderNoteRepository = exports.DBSource.getRepository(VendorOrderNote_1.VendorOrderNote);
exports.SubOrderTrackingRepository = exports.DBSource.getRepository(SubOrderTracking_1.SubOrderTracking);
exports.SubOrderLogRepository = exports.DBSource.getRepository(SubOrderLog_1.SubOrderLog);
exports.SiteSettingRepository = exports.DBSource.getRepository(SiteSetting_1.SiteSetting);
exports.WalletHistoryRepository = exports.DBSource.getRepository(WalletHistory_1.WalletHistory);
exports.CourierRepository = exports.DBSource.getRepository(Courier_1.Courier);
exports.CountriesRepository = exports.DBSource.getRepository(Country_1.Country);
exports.VendorStoreProfileRepository = exports.DBSource.getRepository(VendorStoreProfile_1.VendorStoreProfile);
exports.ProductAnswersRepository = exports.DBSource.getRepository(ProductAnswers_1.ProductAnswers);
exports.ProductQuestionsRepository = exports.DBSource.getRepository(ProductQuestions_1.ProductQuestions);
exports.CampaignVendorsRepository = exports.DBSource.getRepository(CampaignVendors_1.CampaignVendors);
exports.CampaignProductsRepository = exports.DBSource.getRepository(CampaignProducts_1.CampaignProducts);
exports.CampaignRepository = exports.DBSource.getRepository(Campaign_1.Campaign);
exports.ProductRatingRepository = exports.DBSource.getRepository(ProductRating_1.ProductRating);
exports.EmailRepository = exports.DBSource.getRepository(Email_1.Email);
exports.EmailMlRepository = exports.DBSource.getRepository(EmailMl_1.EmailMl);
exports.EmailVariableRepository = exports.DBSource.getRepository(EmailVariable_1.EmailVariable);
exports.SmsRepository = exports.DBSource.getRepository(Sms_1.Sms);
exports.SmsMlRepository = exports.DBSource.getRepository(SmsMl_1.SmsMl);
exports.SmsVariableRepository = exports.DBSource.getRepository(SmsVariable_1.SmsVariable);
exports.ComboOfferRepository = exports.DBSource.getRepository(ComboOffer_1.ComboOffer);
exports.ReasonRepository = exports.DBSource.getRepository(Reason_1.Reason);
exports.CampaignPackageRepository = exports.DBSource.getRepository(CampaignPackages_1.CampaignPackage);
exports.VendorLogsRepository = exports.DBSource.getRepository(VendorLogs_1.VendorLogs);
exports.TaxClassRepository = exports.DBSource.getRepository(TaxClass_1.TaxClass);
exports.SameDayGlobalPincodeRepository = exports.DBSource.getRepository(SameDayGlobalPincodes_1.SameDayGlobalPincodes);
exports.OpenBoxGlobalPincodeRepository = exports.DBSource.getRepository(OpenBoxGlobalPincodes_1.OpenBoxGlobalPincodes);
exports.SameDayProductPincodeRepository = exports.DBSource.getRepository(SameDayProductPincodes_1.SameDayProductPincodes);
exports.OpenBoxProductPincodeRepository = exports.DBSource.getRepository(OpenBoxProductPincodes_1.OpenBoxProductPincodes);
exports.OpenBoxSubscriptionRepository = exports.DBSource.getRepository(OpenBoxSubscription_1.OpenBoxSubscription);
exports.RelatedProductsRepository = exports.DBSource.getRepository(RelatedProducts_1.RelatedProducts);
exports.WarrantyTypesRepository = exports.DBSource.getRepository(WarrantyTypes_1.WarrantyTypes);
exports.ProductWarrantyRepository = exports.DBSource.getRepository(ProductWarranty_1.ProductWarranty);
//# sourceMappingURL=index.js.map